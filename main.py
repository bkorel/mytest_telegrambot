from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    help_button = types.KeyboardButton("–ü–æ–º–æ—â—å üÜò")
    keyboard.add(help_button)
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! üëã –≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç –Ω–∞ Render!",
        reply_markup=get_main_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    await message.reply(
        "–Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç! ü§ñ\n–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π.\n–ê–≤—Ç–æ—Ä: —Ç—ã —Å–∞–º üòâ"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–º–æ—â—å üÜò"
@dp.message_handler(lambda message: message.text == "–ü–æ–º–æ—â—å üÜò")
async def handle_help_button(message: types.Message):
    # –ü—Ä–æ—Å—Ç–æ –≤—ã–∑–æ–≤–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ /help ‚Äî –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏–∫—É!
    await send_help(message)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)